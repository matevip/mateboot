package ${package.Entity};

#foreach($pkg in ${table.importPackages})
import ${pkg};
#if($pkg == "java.time.LocalDateTime")
import com.fasterxml.jackson.annotation.JsonFormat;
#if(${codeConfig.entityConfig.isEnableFastJson})
import com.alibaba.fastjson.annotation.JSONField;
#end
#end
#end
#if(${swagger})
import io.swagger.v3.oas.annotations.media.Schema;
#end
#if(${codeConfig.entityConfig.ifExtendBaseEntity})
#if(${codeConfig.entityConfig.ifEnableTenant})
import ${codeConfig.entityConfig.tenantEntityClass};
#else
import ${codeConfig.entityConfig.baseEntityClass};
#end
#end
#if(${entityLombokModel})
import lombok.Data;
import lombok.EqualsAndHashCode;
#if(${chainModel})
import lombok.experimental.Accessors;
#end
#end

/**
* <p>
* $!{table.comment}
* </p>
*
* @author ${author}
* @since ${date}
*/
#if(${entityLombokModel})
@Data
#if(${codeConfig.entityConfig.ifExtendBaseEntity})
@EqualsAndHashCode(callSuper = true)
#end
#if(${chainModel})
@Accessors(chain = true)
#end
#end
#if(${table.convert})
@TableName("${schemaName}${table.name}")
#end
#if(${swagger})
@Schema(name = "${entity}对象", description = "$!{table.comment}")
#end
public class ${entity} #if(${codeConfig.entityConfig.ifExtendBaseEntity})extends#if(${codeConfig.entityConfig.ifExtendBaseEntity}) ${codeConfig.entityConfig.tenantEntityClassName} #else ${codeConfig.entityConfig.baseEntityClassName}#end#end #if(${entitySerialVersionUID})implements Serializable #end{

#if(${entitySerialVersionUID})
    private static final long serialVersionUID = 1L;
#end
## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})
## 基础类字段不生成
#if(${codeConfig.entityConfig.exclusionField.contains($field.propertyName)})
#else
#if(${field.keyFlag})
#set($keyPropertyName=${field.propertyName})
#end
#if("$!field.comment" != "")
#if(${swagger})
    @Schema(description = "${field.comment}")
#else
/**
* ${field.comment}
*/
#end
#end
#if(${field.keyFlag})
## 主键
#if(${field.keyIdentityFlag})
    @TableId(value = "${field.annotationColumnName}", type = IdType.AUTO)
#elseif(!$null.isNull(${idType}) && "$!idType" != "")
    @TableId(value = "${field.annotationColumnName}", type = IdType.${idType})
#elseif(${field.convert})
    @TableId("${field.annotationColumnName}")
#end
## 普通字段
#elseif(${field.fill})
## -----   存在字段填充设置   -----
#if(${field.convert})
    @TableField(value = "${field.annotationColumnName}", fill = FieldFill.${field.fill})
#else
    @TableField(fill = FieldFill.${field.fill})
#end
#elseif(${field.convert})
    @TableField("${field.annotationColumnName}")
#end
## 乐观锁注解
#if(${field.versionField})
    @Version
#end
## 逻辑删除注解
#if(${field.logicDeleteField})
    @TableLogic
#end
#if($field.type.indexOf('datetime') != -1)
    @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss", timezone = "GMT+8")
#if(${codeConfig.entityConfig.isEnableFastJson})
    @JSONField(format = "yyyy-MM-dd HH:mm:ss")
#end
#end
    private ${field.propertyType} ${field.propertyName};
#end
#end
## ----------  END 字段循环遍历  ----------

#if(!${entityLombokModel})
#foreach($field in ${table.fields})
#if(${field.propertyType.equals("boolean")})
#set($getprefix="is")
#else
#set($getprefix="get")
#end

    public ${field.propertyType} ${getprefix}${field.capitalName}() {
        return ${field.propertyName};
    }

#if(${chainModel})
    public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#else
    public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#end
        this.${field.propertyName} = ${field.propertyName};
#if(${chainModel})
        return this;
#end
    }
#end
## --foreach end---
#end
## --end of #if(!${entityLombokModel})--

#if(${entityColumnConstant})
#foreach($field in ${table.fields})
    public static final String ${field.name.toUpperCase()} = "${field.name}";

#end
#end
#if(${activeRecord})
    @Override
    public Serializable pkVal() {
#if(${keyPropertyName})
        return this.${keyPropertyName};
#else
        return null;
#end
    }

#end
#if(!${entityLombokModel})
    @Override
    public String toString() {
        return "${entity}{" +
#foreach($field in ${table.fields})
#if($!{foreach.index}==0)
        "${field.propertyName}=" + ${field.propertyName} +
#else
        ", ${field.propertyName}=" + ${field.propertyName} +
#end
#end
        "}";
    }
#end
}
